# compiler: R8
# compiler_version: 2.1.75
# pg_map_id: 375f736
# common_typos_disable
com.databaker.synthesizer.BakerMediaCallback -> com.databaker.synthesizer.BakerMediaCallback:
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> onBinaryReceived
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> onBinaryReceived
    1:1:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0 -> onBinaryReceived
    2:2:boolean com.databaker.synthesizer.BakerMediaPlayer.get8KOr16K():0:0 -> onBinaryReceived
    2:2:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0 -> onBinaryReceived
    3:3:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0:0 -> onBinaryReceived
    4:4:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> onBinaryReceived
    4:4:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> onBinaryReceived
    4:4:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0 -> onBinaryReceived
    5:5:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0:0 -> onBinaryReceived
    6:6:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> onBinaryReceived
    6:6:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> onBinaryReceived
    6:6:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0 -> onBinaryReceived
    7:7:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0:0 -> onBinaryReceived
    8:8:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> onBinaryReceived
    8:8:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> onBinaryReceived
    8:8:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0 -> onBinaryReceived
    9:9:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0:0 -> onBinaryReceived
    10:10:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> onBinaryReceived
    10:10:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> onBinaryReceived
    10:10:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0 -> onBinaryReceived
    11:11:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0:0 -> onBinaryReceived
    12:12:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> onBinaryReceived
    12:12:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> onBinaryReceived
    12:12:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0 -> onBinaryReceived
    13:13:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0:0 -> onBinaryReceived
    14:14:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> onBinaryReceived
    14:14:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> onBinaryReceived
    14:14:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0 -> onBinaryReceived
    15:15:void com.databaker.synthesizer.BakerMediaPlayer.onCacheAvailable():0:0 -> onBinaryReceived
    15:15:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0 -> onBinaryReceived
    16:16:void onBinaryReceived(byte[],java.lang.String,java.lang.String,boolean):0:0 -> onBinaryReceived
com.databaker.synthesizer.BakerMediaPlayer -> a.a.a.b:
    java.lang.Thread ttsPlayerThread -> d
    java.util.List playData -> e
    int duration -> f
    int position -> g
    boolean isFinished -> h
    boolean k16OrK8 -> a
    android.media.AudioTrack audioTrack -> c
    com.databaker.synthesizer.BakerMediaCallback callback -> b
    void pause() -> a
    void setAudioData(com.databaker.synthesizer.bean.OneSecPcmBlock,boolean) -> a
com.databaker.synthesizer.BakerMediaPlayer$1 -> a.a.a.a:
    com.databaker.synthesizer.BakerMediaPlayer this$0 -> a
    1:1:int com.databaker.synthesizer.BakerMediaPlayer.access$200():0:0 -> run
    1:1:void run():0 -> run
    2:2:java.util.List com.databaker.synthesizer.BakerMediaPlayer.access$300():0:0 -> run
    2:2:void run():0 -> run
    3:3:void run():0:0 -> run
    4:4:java.util.List com.databaker.synthesizer.BakerMediaPlayer.access$300():0:0 -> run
    4:4:void run():0 -> run
    5:5:void run():0:0 -> run
    6:6:android.media.AudioTrack com.databaker.synthesizer.BakerMediaPlayer.access$400(com.databaker.synthesizer.BakerMediaPlayer):0:0 -> run
    6:6:void run():0 -> run
    7:7:void run():0:0 -> run
    8:8:boolean com.databaker.synthesizer.BakerMediaPlayer.access$500():0:0 -> run
    8:8:void run():0 -> run
    9:9:void run():0:0 -> run
    10:10:com.databaker.synthesizer.BakerMediaCallback com.databaker.synthesizer.BakerMediaPlayer.access$600(com.databaker.synthesizer.BakerMediaPlayer):0:0 -> run
    10:10:void run():0 -> run
    11:11:void run():0:0 -> run
    12:12:android.media.AudioTrack com.databaker.synthesizer.BakerMediaPlayer.access$400(com.databaker.synthesizer.BakerMediaPlayer):0:0 -> run
    12:12:void run():0 -> run
    13:13:void run():0:0 -> run
    14:14:com.databaker.synthesizer.BakerMediaCallback com.databaker.synthesizer.BakerMediaPlayer.access$600(com.databaker.synthesizer.BakerMediaPlayer):0:0 -> run
    14:14:void run():0 -> run
    15:15:void run():0:0 -> run
    16:16:int com.databaker.synthesizer.BakerMediaPlayer.access$200():0:0 -> run
    16:16:void run():0 -> run
    17:17:java.util.List com.databaker.synthesizer.BakerMediaPlayer.access$300():0:0 -> run
    17:17:void run():0 -> run
    18:18:void run():0:0 -> run
    19:19:android.media.AudioTrack com.databaker.synthesizer.BakerMediaPlayer.access$400(com.databaker.synthesizer.BakerMediaPlayer):0:0 -> run
    19:19:void run():0 -> run
    20:20:void run():0:0 -> run
    21:21:android.media.AudioTrack com.databaker.synthesizer.BakerMediaPlayer.access$400(com.databaker.synthesizer.BakerMediaPlayer):0:0 -> run
    21:21:void run():0 -> run
    22:22:java.util.List com.databaker.synthesizer.BakerMediaPlayer.access$300():0:0 -> run
    22:22:void run():0 -> run
    23:23:int com.databaker.synthesizer.BakerMediaPlayer.access$200():0:0 -> run
    23:23:void run():0 -> run
    24:24:void run():0:0 -> run
    25:25:java.util.List com.databaker.synthesizer.BakerMediaPlayer.access$300():0:0 -> run
    25:25:void run():0 -> run
    26:26:int com.databaker.synthesizer.BakerMediaPlayer.access$200():0:0 -> run
    26:26:void run():0 -> run
    27:27:void run():0:0 -> run
    28:28:int com.databaker.synthesizer.BakerMediaPlayer.access$208():0:0 -> run
    28:28:void run():0 -> run
    29:29:void run():0:0 -> run
    30:30:com.databaker.synthesizer.BakerMediaCallback com.databaker.synthesizer.BakerMediaPlayer.access$600(com.databaker.synthesizer.BakerMediaPlayer):0:0 -> run
    30:30:void run():0 -> run
    31:31:com.baker.sdk.basecomponent.bean.BakerError com.databaker.synthesizer.util.SynthesizerErrorUtils.formatErrorBean(java.lang.String):0:0 -> run
    31:31:void run():0 -> run
    32:32:void run():0:0 -> run
com.databaker.synthesizer.BakerMediaPlayer$HolderClass -> a.a.a.b$a:
    com.databaker.synthesizer.BakerMediaPlayer inStance -> a
    1:1:void com.databaker.synthesizer.BakerMediaPlayer.<init>(com.databaker.synthesizer.BakerMediaPlayer$1):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
com.databaker.synthesizer.BakerSynthesizerImpl -> com.databaker.synthesizer.BakerSynthesizerImpl:
    java.lang.String voiceName -> g
    boolean k16OrK8 -> m
    int audioType -> n
    java.lang.String mUrl -> f
    int rate -> o
    int pitch -> l
    java.lang.String language -> h
    float speed -> i
    boolean enableTimestamp -> p
    com.databaker.synthesizer.util.AuthenticationUtils authenticationUtils -> b
    int timeOut -> j
    int volume -> k
    com.databaker.synthesizer.BakerSynthesizerImpl$HsjWebSocketListener listener -> t
    boolean isFirst -> q
    com.databaker.synthesizer.net.okhttp.WebSocketClient webSocketClient -> a
    java.util.concurrent.LinkedBlockingQueue textQueue -> s
    com.databaker.synthesizer.SynthesizerCallback callback -> e
    int isInit -> u
    java.lang.String originText -> c
    int perDuration -> r
    java.lang.String contentStr -> d
    com.databaker.synthesizer.net.okhttp.base.CallbackListener mAuthenticationUtilsListener -> v
    boolean access$102(com.databaker.synthesizer.BakerSynthesizerImpl,boolean) -> a
    void getTtsToken(int) -> a
    void initBaseComponent(android.content.Context,java.lang.String) -> a
    void onFault(com.baker.sdk.basecomponent.bean.BakerError) -> a
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> bakerPause
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> bakerPause
    1:1:void bakerPause():0 -> bakerPause
    2:2:void bakerPause():0:0 -> bakerPause
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> bakerPlay
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> bakerPlay
    1:1:void bakerPlay():0 -> bakerPlay
    2:2:void com.databaker.synthesizer.BakerMediaPlayer.play():0:0 -> bakerPlay
    2:2:void bakerPlay():0 -> bakerPlay
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> bakerStop
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> bakerStop
    1:1:void bakerStop():0 -> bakerStop
    2:2:void com.databaker.synthesizer.BakerMediaPlayer.stop():0:0 -> bakerStop
    2:2:void bakerStop():0 -> bakerStop
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> getCurrentPosition
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> getCurrentPosition
    1:1:int getCurrentPosition():0 -> getCurrentPosition
    2:2:int com.databaker.synthesizer.BakerMediaPlayer.getCurrentPosition():0:0 -> getCurrentPosition
    2:2:int getCurrentPosition():0 -> getCurrentPosition
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> getDuration
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> getDuration
    1:1:int getDuration():0 -> getDuration
    2:2:int com.databaker.synthesizer.BakerMediaPlayer.getDuration():0:0 -> getDuration
    2:2:int getDuration():0 -> getDuration
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> isPlaying
    1:1:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> isPlaying
    1:1:boolean isPlaying():0 -> isPlaying
    2:2:boolean com.databaker.synthesizer.BakerMediaPlayer.isPlaying():0:0 -> isPlaying
    2:2:boolean isPlaying():0 -> isPlaying
    1:1:void com.databaker.synthesizer.net.okhttp.WebSocketClient.stop():0:0 -> onDestroy
    1:1:void onDestroy():0 -> onDestroy
    1:1:java.util.List com.databaker.synthesizer.util.Util.splitText(java.lang.String):0:0 -> setText
    1:1:void setText(java.lang.String):0 -> setText
    2:2:void setText(java.lang.String):0:0 -> setText
    1:1:com.baker.sdk.basecomponent.bean.BakerError com.databaker.synthesizer.util.SynthesizerErrorUtils.formatErrorBean(java.lang.String):0:0 -> start
    1:1:void start():0 -> start
    2:2:void start():0:0 -> start
    3:3:com.baker.sdk.basecomponent.bean.BakerError com.databaker.synthesizer.util.SynthesizerErrorUtils.formatErrorBean(java.lang.String):0:0 -> start
    3:3:void start():0 -> start
    4:4:void start():0:0 -> start
    5:5:com.baker.sdk.basecomponent.bean.BakerError com.databaker.synthesizer.util.SynthesizerErrorUtils.formatErrorBean(java.lang.String):0:0 -> start
    5:5:void start():0 -> start
    6:6:void start():0:0 -> start
com.databaker.synthesizer.BakerSynthesizerImpl$1 -> com.databaker.synthesizer.BakerSynthesizerImpl$a:
com.databaker.synthesizer.BakerSynthesizerImpl$AuthenticationUtilsListener -> com.databaker.synthesizer.BakerSynthesizerImpl$b:
    com.databaker.synthesizer.BakerSynthesizerImpl this$0 -> a
    1:1:com.baker.sdk.basecomponent.bean.BakerError com.databaker.synthesizer.util.SynthesizerErrorUtils.formatErrorBean(java.lang.String):0:0 -> a
    1:1:void onFailure(java.lang.Exception):0 -> a
    2:2:void com.databaker.synthesizer.BakerSynthesizerImpl.access$1300(com.databaker.synthesizer.BakerSynthesizerImpl,com.baker.sdk.basecomponent.bean.BakerError):0:0 -> a
    2:2:void onFailure(java.lang.Exception):0 -> a
    3:3:void onSuccess(java.lang.String):0:0 -> a
    3:3:void onSuccess(java.lang.Object):0 -> a
    4:4:int com.databaker.synthesizer.BakerSynthesizerImpl.access$1500(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> a
    4:4:void onSuccess(java.lang.String):0 -> a
    4:4:void onSuccess(java.lang.Object):0 -> a
    5:5:void onSuccess(java.lang.String):0:0 -> a
    5:5:void onSuccess(java.lang.Object):0 -> a
    6:6:com.databaker.synthesizer.net.okhttp.WebSocketClient com.databaker.synthesizer.BakerSynthesizerImpl.access$700(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> a
    6:6:void onSuccess(java.lang.String):0 -> a
    6:6:void onSuccess(java.lang.Object):0 -> a
    7:7:com.databaker.synthesizer.BakerSynthesizerImpl$HsjWebSocketListener com.databaker.synthesizer.BakerSynthesizerImpl.access$1100(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> a
    7:7:void onSuccess(java.lang.String):0 -> a
    7:7:void onSuccess(java.lang.Object):0 -> a
    8:8:void onSuccess(java.lang.String):0:0 -> a
    8:8:void onSuccess(java.lang.Object):0 -> a
com.databaker.synthesizer.BakerSynthesizerImpl$HsjWebSocketListener -> com.databaker.synthesizer.BakerSynthesizerImpl$c:
    com.databaker.synthesizer.BakerSynthesizerImpl this$0 -> a
    1:1:com.databaker.synthesizer.net.okhttp.WebSocketClient com.databaker.synthesizer.BakerSynthesizerImpl.access$700(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onFailure
    1:1:void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response):0 -> onFailure
    2:2:okhttp3.WebSocket com.databaker.synthesizer.net.okhttp.WebSocketClient.getCancelSocket():0:0 -> onFailure
    2:2:void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response):0 -> onFailure
    3:3:void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response):0:0 -> onFailure
    4:4:void com.databaker.synthesizer.BakerSynthesizerImpl.access$1300(com.databaker.synthesizer.BakerSynthesizerImpl,com.baker.sdk.basecomponent.bean.BakerError):0:0 -> onFailure
    4:4:void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response):0 -> onFailure
    5:5:void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response):0:0 -> onFailure
    1:1:com.databaker.synthesizer.net.okhttp.WebSocketClient com.databaker.synthesizer.BakerSynthesizerImpl.access$700(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onMessage
    1:1:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    2:2:okhttp3.WebSocket com.databaker.synthesizer.net.okhttp.WebSocketClient.getWebSocket():0:0 -> onMessage
    2:2:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    3:3:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    4:4:com.databaker.synthesizer.SynthesizerCallback com.databaker.synthesizer.BakerSynthesizerImpl.access$200(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onMessage
    4:4:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    5:5:boolean com.databaker.synthesizer.BakerSynthesizerImpl.access$100(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onMessage
    5:5:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    6:6:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    7:7:com.databaker.synthesizer.SynthesizerCallback com.databaker.synthesizer.BakerSynthesizerImpl.access$200(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onMessage
    7:7:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    8:8:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    9:9:com.databaker.synthesizer.SynthesizerCallback com.databaker.synthesizer.BakerSynthesizerImpl.access$200(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onMessage
    9:9:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    10:10:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    11:11:java.util.concurrent.LinkedBlockingQueue com.databaker.synthesizer.BakerSynthesizerImpl.access$800(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onMessage
    11:11:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    12:12:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    13:13:java.util.concurrent.LinkedBlockingQueue com.databaker.synthesizer.BakerSynthesizerImpl.access$800(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onMessage
    13:13:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    14:14:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    15:15:java.lang.String com.databaker.synthesizer.BakerSynthesizerImpl.access$902(com.databaker.synthesizer.BakerSynthesizerImpl,java.lang.String):0:0 -> onMessage
    15:15:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    16:16:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    17:17:java.lang.String com.databaker.synthesizer.BakerSynthesizerImpl.access$900(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onMessage
    17:17:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    18:18:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    19:19:void com.databaker.synthesizer.BakerSynthesizerImpl.closeSocket():0:0 -> onMessage
    19:19:void com.databaker.synthesizer.BakerSynthesizerImpl.access$1000(com.databaker.synthesizer.BakerSynthesizerImpl):0 -> onMessage
    19:19:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    20:20:okhttp3.WebSocket com.databaker.synthesizer.net.okhttp.WebSocketClient.getWebSocket():0:0 -> onMessage
    20:20:void com.databaker.synthesizer.BakerSynthesizerImpl.closeSocket():0 -> onMessage
    20:20:void com.databaker.synthesizer.BakerSynthesizerImpl.access$1000(com.databaker.synthesizer.BakerSynthesizerImpl):0 -> onMessage
    20:20:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    21:21:void com.databaker.synthesizer.BakerSynthesizerImpl.closeSocket():0:0 -> onMessage
    21:21:void com.databaker.synthesizer.BakerSynthesizerImpl.access$1000(com.databaker.synthesizer.BakerSynthesizerImpl):0 -> onMessage
    21:21:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    22:22:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    23:23:com.databaker.synthesizer.SynthesizerCallback com.databaker.synthesizer.BakerSynthesizerImpl.access$200(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onMessage
    23:23:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    24:24:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    25:25:com.databaker.synthesizer.net.okhttp.WebSocketClient com.databaker.synthesizer.BakerSynthesizerImpl.access$700(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onMessage
    25:25:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    26:26:com.databaker.synthesizer.BakerSynthesizerImpl$HsjWebSocketListener com.databaker.synthesizer.BakerSynthesizerImpl.access$1100(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onMessage
    26:26:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    27:27:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    28:28:void com.databaker.synthesizer.BakerSynthesizerImpl.access$1200(com.databaker.synthesizer.BakerSynthesizerImpl,int):0:0 -> onMessage
    28:28:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    29:29:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    30:30:com.baker.sdk.basecomponent.bean.BakerError com.databaker.synthesizer.util.SynthesizerErrorUtils.formatErrorBean(int,java.lang.String,java.lang.String):0:0 -> onMessage
    30:30:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    31:31:void com.databaker.synthesizer.BakerSynthesizerImpl.access$1300(com.databaker.synthesizer.BakerSynthesizerImpl,com.baker.sdk.basecomponent.bean.BakerError):0:0 -> onMessage
    31:31:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    32:32:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    33:33:void com.databaker.synthesizer.BakerSynthesizerImpl.access$1300(com.databaker.synthesizer.BakerSynthesizerImpl,com.baker.sdk.basecomponent.bean.BakerError):0:0 -> onMessage
    33:33:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    34:34:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    35:35:com.baker.sdk.basecomponent.bean.BakerError com.databaker.synthesizer.util.SynthesizerErrorUtils.formatErrorBean(java.lang.String):0:0 -> onMessage
    35:35:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    36:36:void com.databaker.synthesizer.BakerSynthesizerImpl.access$1300(com.databaker.synthesizer.BakerSynthesizerImpl,com.baker.sdk.basecomponent.bean.BakerError):0:0 -> onMessage
    36:36:void onMessage(okhttp3.WebSocket,java.lang.String):0 -> onMessage
    37:37:void onMessage(okhttp3.WebSocket,java.lang.String):0:0 -> onMessage
    1:1:boolean com.databaker.synthesizer.BakerSynthesizerImpl.access$100(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onOpen
    1:1:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    2:2:com.databaker.synthesizer.SynthesizerCallback com.databaker.synthesizer.BakerSynthesizerImpl.access$200(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onOpen
    2:2:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    3:3:void onOpen(okhttp3.WebSocket,okhttp3.Response):0:0 -> onOpen
    4:4:com.databaker.synthesizer.SynthesizerCallback com.databaker.synthesizer.BakerSynthesizerImpl.access$200(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onOpen
    4:4:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    5:5:void onOpen(okhttp3.WebSocket,okhttp3.Response):0:0 -> onOpen
    6:6:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> onOpen
    6:6:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> onOpen
    6:6:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    7:7:boolean com.databaker.synthesizer.BakerSynthesizerImpl.access$300(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onOpen
    7:7:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    8:8:void com.databaker.synthesizer.BakerMediaPlayer.init(boolean):0:0 -> onOpen
    8:8:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    9:9:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> onOpen
    9:9:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> onOpen
    9:9:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    10:10:void com.databaker.synthesizer.BakerMediaPlayer.clean():0:0 -> onOpen
    10:10:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    11:11:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> onOpen
    11:11:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> onOpen
    11:11:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    12:12:void onOpen(okhttp3.WebSocket,okhttp3.Response):0:0 -> onOpen
    13:13:java.lang.String com.databaker.synthesizer.BakerSynthesizerImpl.access$400(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onOpen
    13:13:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    14:14:void onOpen(okhttp3.WebSocket,okhttp3.Response):0:0 -> onOpen
    15:15:int com.databaker.synthesizer.BakerSynthesizerImpl.access$500(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onOpen
    15:15:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    16:16:void onOpen(okhttp3.WebSocket,okhttp3.Response):0:0 -> onOpen
    17:17:void com.databaker.synthesizer.BakerMediaPlayer.setDuration(int):0:0 -> onOpen
    17:17:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    18:18:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer$HolderClass.access$100():0:0 -> onOpen
    18:18:com.databaker.synthesizer.BakerMediaPlayer com.databaker.synthesizer.BakerMediaPlayer.getInstance():0 -> onOpen
    18:18:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    19:19:void onOpen(okhttp3.WebSocket,okhttp3.Response):0:0 -> onOpen
    20:20:com.databaker.synthesizer.SynthesizerCallback com.databaker.synthesizer.BakerSynthesizerImpl.access$200(com.databaker.synthesizer.BakerSynthesizerImpl):0:0 -> onOpen
    20:20:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    21:21:void onOpen(okhttp3.WebSocket,okhttp3.Response):0:0 -> onOpen
    22:22:void com.databaker.synthesizer.BakerMediaPlayer.setCallback(com.databaker.synthesizer.BakerMediaCallback):0:0 -> onOpen
    22:22:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    23:23:void onOpen(okhttp3.WebSocket,okhttp3.Response):0:0 -> onOpen
    24:24:void com.databaker.synthesizer.BakerSynthesizerImpl.send():0:0 -> onOpen
    24:24:void com.databaker.synthesizer.BakerSynthesizerImpl.access$600(com.databaker.synthesizer.BakerSynthesizerImpl):0 -> onOpen
    24:24:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    25:25:void com.databaker.synthesizer.BakerSynthesizerImpl.closeSocket():0:0 -> onOpen
    25:25:void com.databaker.synthesizer.BakerSynthesizerImpl.send():0 -> onOpen
    25:25:void com.databaker.synthesizer.BakerSynthesizerImpl.access$600(com.databaker.synthesizer.BakerSynthesizerImpl):0 -> onOpen
    25:25:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    26:26:okhttp3.WebSocket com.databaker.synthesizer.net.okhttp.WebSocketClient.getWebSocket():0:0 -> onOpen
    26:26:void com.databaker.synthesizer.BakerSynthesizerImpl.closeSocket():0 -> onOpen
    26:26:void com.databaker.synthesizer.BakerSynthesizerImpl.send():0 -> onOpen
    26:26:void com.databaker.synthesizer.BakerSynthesizerImpl.access$600(com.databaker.synthesizer.BakerSynthesizerImpl):0 -> onOpen
    26:26:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    27:27:void com.databaker.synthesizer.BakerSynthesizerImpl.closeSocket():0:0 -> onOpen
    27:27:void com.databaker.synthesizer.BakerSynthesizerImpl.send():0 -> onOpen
    27:27:void com.databaker.synthesizer.BakerSynthesizerImpl.access$600(com.databaker.synthesizer.BakerSynthesizerImpl):0 -> onOpen
    27:27:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    28:28:void com.databaker.synthesizer.BakerSynthesizerImpl.send():0:0 -> onOpen
    28:28:void com.databaker.synthesizer.BakerSynthesizerImpl.access$600(com.databaker.synthesizer.BakerSynthesizerImpl):0 -> onOpen
    28:28:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    29:29:okhttp3.WebSocket com.databaker.synthesizer.net.okhttp.WebSocketClient.getWebSocket():0:0 -> onOpen
    29:29:void com.databaker.synthesizer.BakerSynthesizerImpl.send():0 -> onOpen
    29:29:void com.databaker.synthesizer.BakerSynthesizerImpl.access$600(com.databaker.synthesizer.BakerSynthesizerImpl):0 -> onOpen
    29:29:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
    30:30:void com.databaker.synthesizer.BakerSynthesizerImpl.send():0:0 -> onOpen
    30:30:void com.databaker.synthesizer.BakerSynthesizerImpl.access$600(com.databaker.synthesizer.BakerSynthesizerImpl):0 -> onOpen
    30:30:void onOpen(okhttp3.WebSocket,okhttp3.Response):0 -> onOpen
com.databaker.synthesizer.SynthesizerConstants -> a.a.a.c:
    java.lang.String ttsToken -> a
    java.lang.String mClientSecret -> c
    java.lang.String mClientId -> b
    java.lang.String com.databaker.synthesizer.util.SynthesizerErrorUtils.formatError(java.lang.String) -> a
    com.baker.sdk.basecomponent.bean.BakerError com.databaker.synthesizer.util.SynthesizerErrorUtils.formatErrorBean(java.lang.String,java.lang.String) -> a
    void com.databaker.synthesizer.util.Util.split(java.util.List,java.lang.String,int) -> a
    java.lang.String com.databaker.synthesizer.util.Util.md5(java.lang.String) -> b
com.databaker.synthesizer.SynthesizerInterface -> a.a.a.d:
com.databaker.synthesizer.net.okhttp.WebSocketClient -> a.a.a.e.a.a:
    okhttp3.OkHttpClient client -> b
    okhttp3.WebSocket cancelSocket -> e
    okhttp3.WebSocket webSocket -> c
    int connectTimeOut -> d
    okhttp3.Request request -> a
    void start(okhttp3.WebSocketListener) -> a
com.databaker.synthesizer.net.okhttp.base.CallbackListener -> a.a.a.e.a.b.a:
    void onFailure(java.lang.Exception) -> a
    void onSuccess(java.lang.Object) -> a
com.databaker.synthesizer.net.okhttp.base.CommonJSONCallBack -> a.a.a.e.a.b.b:
    android.os.Handler handler -> a
    com.databaker.synthesizer.net.okhttp.base.CallbackListener listener -> b
com.databaker.synthesizer.net.okhttp.base.CommonJSONCallBack$1 -> a.a.a.e.a.b.b$a:
    java.io.IOException val$e -> a
    com.databaker.synthesizer.net.okhttp.base.CommonJSONCallBack this$0 -> b
    1:1:com.databaker.synthesizer.net.okhttp.base.CallbackListener com.databaker.synthesizer.net.okhttp.base.CommonJSONCallBack.access$000(com.databaker.synthesizer.net.okhttp.base.CommonJSONCallBack):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
com.databaker.synthesizer.net.okhttp.base.CommonJSONCallBack$2 -> a.a.a.e.a.b.b$b:
    okhttp3.Response val$response -> a
    com.databaker.synthesizer.net.okhttp.base.CommonJSONCallBack this$0 -> b
    1:1:com.databaker.synthesizer.net.okhttp.base.CallbackListener com.databaker.synthesizer.net.okhttp.base.CommonJSONCallBack.access$000(com.databaker.synthesizer.net.okhttp.base.CommonJSONCallBack):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:com.databaker.synthesizer.net.okhttp.base.CallbackListener com.databaker.synthesizer.net.okhttp.base.CommonJSONCallBack.access$000(com.databaker.synthesizer.net.okhttp.base.CommonJSONCallBack):0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
    5:5:com.databaker.synthesizer.net.okhttp.base.CallbackListener com.databaker.synthesizer.net.okhttp.base.CommonJSONCallBack.access$000(com.databaker.synthesizer.net.okhttp.base.CommonJSONCallBack):0:0 -> run
    5:5:void run():0 -> run
    6:6:void run():0:0 -> run
com.databaker.synthesizer.net.okhttp.base.CommonOkHttpClient -> a.a.a.e.a.b.d:
    okhttp3.OkHttpClient mClient -> a
    com.databaker.synthesizer.net.okhttp.interceptor.HttpLoggingInterceptor logging -> b
    okhttp3.Interceptor headerInterceptor -> c
com.databaker.synthesizer.net.okhttp.base.CommonOkHttpClient$1 -> a.a.a.e.a.b.c:
com.databaker.synthesizer.net.okhttp.base.CommonOkHttpClient$2 -> a.a.a.e.a.b.d$a:
    void log(java.lang.String) -> a
com.databaker.synthesizer.net.okhttp.base.CommonOkHttpClient$3 -> a.a.a.e.a.b.d$b:
    1:1:int com.databaker.synthesizer.util.Util.random6num():0:0 -> intercept
    1:1:okhttp3.Response intercept(okhttp3.Interceptor$Chain):0 -> intercept
    2:2:okhttp3.Response intercept(okhttp3.Interceptor$Chain):0:0 -> intercept
    3:3:java.lang.String com.databaker.synthesizer.util.Util.genSignature(java.lang.String,java.lang.String,java.util.Map):0:0 -> intercept
    3:3:okhttp3.Response intercept(okhttp3.Interceptor$Chain):0 -> intercept
    4:4:okhttp3.Response intercept(okhttp3.Interceptor$Chain):0:0 -> intercept
com.databaker.synthesizer.net.okhttp.base.CommonOkHttpRequest -> a.a.a.e.a.b.e:
    int $r8$clinit -> a
com.databaker.synthesizer.net.okhttp.interceptor.HttpLoggingInterceptor -> a.a.a.e.a.c.a:
    java.nio.charset.Charset UTF8 -> d
    com.databaker.synthesizer.net.okhttp.interceptor.Logger logger -> a
    java.util.Set headersToRedact -> b
    com.databaker.synthesizer.net.okhttp.interceptor.HttpLoggingInterceptor$Level level -> c
    boolean bodyHasUnknownEncoding(okhttp3.Headers) -> a
    boolean isPlaintext(okio.Buffer) -> a
    void logHeader(okhttp3.Headers,int) -> a
com.databaker.synthesizer.net.okhttp.interceptor.HttpLoggingInterceptor$Level -> a.a.a.e.a.c.a$a:
    com.databaker.synthesizer.net.okhttp.interceptor.HttpLoggingInterceptor$Level[] $VALUES -> e
    com.databaker.synthesizer.net.okhttp.interceptor.HttpLoggingInterceptor$Level BASIC -> b
    com.databaker.synthesizer.net.okhttp.interceptor.HttpLoggingInterceptor$Level NONE -> a
    com.databaker.synthesizer.net.okhttp.interceptor.HttpLoggingInterceptor$Level BODY -> d
    com.databaker.synthesizer.net.okhttp.interceptor.HttpLoggingInterceptor$Level HEADERS -> c
com.databaker.synthesizer.net.okhttp.interceptor.Logger -> a.a.a.e.a.c.b:
    void log(java.lang.String) -> a
com.databaker.synthesizer.util.AuthenticationUtils -> a.a.a.f.a:
    com.databaker.synthesizer.net.okhttp.base.CallbackListener listener -> b
    int retryCount -> a
    1:1:okhttp3.Request com.databaker.synthesizer.net.okhttp.base.CommonOkHttpRequest.createGetRequest(java.lang.String,java.util.Map):0:0 -> a
    1:1:void authentication(boolean):0 -> a
    2:2:void authentication(boolean):0:0 -> a
    3:3:okhttp3.Call com.databaker.synthesizer.net.okhttp.base.CommonOkHttpClient.sendRequest(okhttp3.Request,com.databaker.synthesizer.net.okhttp.base.CallbackListener):0:0 -> a
    3:3:void authentication(boolean):0 -> a
    4:4:okhttp3.OkHttpClient com.databaker.synthesizer.net.okhttp.base.CommonOkHttpClient.init():0:0 -> a
    4:4:okhttp3.Call com.databaker.synthesizer.net.okhttp.base.CommonOkHttpClient.sendRequest(okhttp3.Request,com.databaker.synthesizer.net.okhttp.base.CallbackListener):0 -> a
    4:4:void authentication(boolean):0 -> a
    5:5:com.databaker.synthesizer.net.okhttp.interceptor.HttpLoggingInterceptor com.databaker.synthesizer.net.okhttp.interceptor.HttpLoggingInterceptor.setLevel(com.databaker.synthesizer.net.okhttp.interceptor.HttpLoggingInterceptor$Level):0:0 -> a
    5:5:okhttp3.OkHttpClient com.databaker.synthesizer.net.okhttp.base.CommonOkHttpClient.init():0 -> a
    5:5:okhttp3.Call com.databaker.synthesizer.net.okhttp.base.CommonOkHttpClient.sendRequest(okhttp3.Request,com.databaker.synthesizer.net.okhttp.base.CallbackListener):0 -> a
    5:5:void authentication(boolean):0 -> a
    6:6:okhttp3.OkHttpClient com.databaker.synthesizer.net.okhttp.base.CommonOkHttpClient.init():0:0 -> a
    6:6:okhttp3.Call com.databaker.synthesizer.net.okhttp.base.CommonOkHttpClient.sendRequest(okhttp3.Request,com.databaker.synthesizer.net.okhttp.base.CallbackListener):0 -> a
    6:6:void authentication(boolean):0 -> a
    7:7:okhttp3.Call com.databaker.synthesizer.net.okhttp.base.CommonOkHttpClient.sendRequest(okhttp3.Request,com.databaker.synthesizer.net.okhttp.base.CallbackListener):0:0 -> a
    7:7:void authentication(boolean):0 -> a
com.databaker.synthesizer.util.AuthenticationUtils$1 -> a.a.a.f.a$a:
    com.databaker.synthesizer.util.AuthenticationUtils this$0 -> a
    1:1:int com.databaker.synthesizer.util.AuthenticationUtils.access$000(com.databaker.synthesizer.util.AuthenticationUtils):0:0 -> a
    1:1:void onFailure(java.lang.Exception):0 -> a
    2:2:int com.databaker.synthesizer.util.AuthenticationUtils.access$002(com.databaker.synthesizer.util.AuthenticationUtils,int):0:0 -> a
    2:2:void onFailure(java.lang.Exception):0 -> a
    3:3:void onFailure(java.lang.Exception):0:0 -> a
    4:4:com.databaker.synthesizer.net.okhttp.base.CallbackListener com.databaker.synthesizer.util.AuthenticationUtils.access$100(com.databaker.synthesizer.util.AuthenticationUtils):0:0 -> a
    4:4:void onFailure(java.lang.Exception):0 -> a
    5:5:void onFailure(java.lang.Exception):0:0 -> a
    6:6:void onSuccess(com.databaker.synthesizer.bean.Token):0:0 -> a
    6:6:void onSuccess(java.lang.Object):0 -> a
    7:7:int com.databaker.synthesizer.util.AuthenticationUtils.access$002(com.databaker.synthesizer.util.AuthenticationUtils,int):0:0 -> a
    7:7:void onSuccess(com.databaker.synthesizer.bean.Token):0 -> a
    7:7:void onSuccess(java.lang.Object):0 -> a
    8:8:com.databaker.synthesizer.net.okhttp.base.CallbackListener com.databaker.synthesizer.util.AuthenticationUtils.access$100(com.databaker.synthesizer.util.AuthenticationUtils):0:0 -> a
    8:8:void onSuccess(com.databaker.synthesizer.bean.Token):0 -> a
    8:8:void onSuccess(java.lang.Object):0 -> a
    9:9:void onSuccess(com.databaker.synthesizer.bean.Token):0:0 -> a
    9:9:void onSuccess(java.lang.Object):0 -> a
    10:10:int com.databaker.synthesizer.util.AuthenticationUtils.access$000(com.databaker.synthesizer.util.AuthenticationUtils):0:0 -> a
    10:10:void onSuccess(com.databaker.synthesizer.bean.Token):0 -> a
    10:10:void onSuccess(java.lang.Object):0 -> a
    11:11:int com.databaker.synthesizer.util.AuthenticationUtils.access$002(com.databaker.synthesizer.util.AuthenticationUtils,int):0:0 -> a
    11:11:void onSuccess(com.databaker.synthesizer.bean.Token):0 -> a
    11:11:void onSuccess(java.lang.Object):0 -> a
    12:12:void onSuccess(com.databaker.synthesizer.bean.Token):0:0 -> a
    12:12:void onSuccess(java.lang.Object):0 -> a
    13:13:com.databaker.synthesizer.net.okhttp.base.CallbackListener com.databaker.synthesizer.util.AuthenticationUtils.access$100(com.databaker.synthesizer.util.AuthenticationUtils):0:0 -> a
    13:13:void onSuccess(com.databaker.synthesizer.bean.Token):0 -> a
    13:13:void onSuccess(java.lang.Object):0 -> a
    14:14:void onSuccess(com.databaker.synthesizer.bean.Token):0:0 -> a
    14:14:void onSuccess(java.lang.Object):0 -> a
