apply plugin: 'com.android.library'
def mVersion = "2.0.0"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 4
        versionName "${mVersion}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation project(path: ':bakerhttp')
    implementation project(path: ':bakerbasecomponent')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    api 'com.squareup.okhttp3:okhttp:4.2.2'
    api 'com.google.code.gson:gson:2.8.6'
//    api 'com.baker.sdk.basecomponent:bakerbasecomponent:1.0.2'
//    api 'com.baker.sdk.http:bakerhttp:1.0.3'
}

//task to delete the old jar
task exportJar(type: Copy, dependsOn: build) {
    from('build/intermediates/packaged-classes/release/')
    into('build/libs')
    include('classes.jar')
    ///Rename the jar
    rename('classes.jar', "baker_long_asr.jar")
}

exportJar.dependsOn(build)
